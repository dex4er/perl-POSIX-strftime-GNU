#!/usr/bin/perl

use strict;
use warnings;

BEGIN {
    # Windows can't change timezone inside Perl script
    if (($ENV{TZ}||'') ne 'GMT') {
        $ENV{TZ} = 'GMT';
        exec $^X, (map { "-I$_" } @INC), $0;
    };
}

use Carp ();
use File::Spec;
use Time::Local;

$SIG{__WARN__} = sub { local $Carp::CarpLevel = 1; Carp::confess("Warning: ", @_) };

use Test::More tests => 114;

BEGIN { use_ok 'POSIX::strftime::GNU'; }
BEGIN { use_ok 'POSIX', qw( strftime ); }

POSIX::setlocale(&POSIX::LC_TIME, 'C');

my %format = (
    a      => 'Sun',
    '#a'   => 'SUN',
    '12a'  => '         Sun',
    '#12a' => '         SUN',
    A      => 'Sunday',
    '#A'   => 'SUNDAY',
    '12A'  => '      Sunday',
    b      => 'Jul',
    '12b'  => '         Jul',
    '#b'   => 'JUL',
    B      => 'July',
    '#B'   => 'JULY',
    '12B'  => '        July',
    C      => '20',
    '12C'  => '000000000020',
    d      => '06',
    '12d'  => '000000000006',
    D      => '07/06/08',
    '12D'  => '    07/06/08',
    e      => ' 6',
    '12e'  => '           6',
    EC     => '20',
    '12EC' => '000000000020',
    Ex     => '07/06/08',
    EX     => '21:03:54',
    EY     => '2008',
    Ey     => '08',
    F      => '2008-07-06',
    '12F'  => '  2008-07-06',
    G      => '2008',
    '12G'  => '000000002008',
    g      => '08',
    '12g'  => '000000000008',
    h      => 'Jul',
    '12h'  => '         Jul',
    '#h'   => 'JUL',
    H      => '21',
    '12H'  => '000000000021',
    I      => '09',
    '12I'  => '000000000009',
    j      => '188',
    '12j'  => '000000000188',
    k      => '21',
    '12k'  => '          21',
    l      => ' 9',
    '12l'  => '           9',
    m      => '07',
    '12m'  => '000000000007',
    M      => '03',
    '12M'  => '000000000003',
    n      => "\n",
    '12n'  => "           \n",
    Od     => '06',
    '12Od' => '000000000006',
    Oe     => ' 6',
    OH     => '21',
    OI     => '09',
    Om     => '07',
    OM     => '03',
    OS     => '54',
    Ou     => '7',
    OU     => '27',
    OV     => '27',
    Ow     => '0',
    Oy     => '08',
    p      => 'PM',
    '#p'   => 'pm',
    '12p'  => '          PM',
    P      => 'pm',
    '12P'  => '          pm',
    r      => '09:03:54 PM',
    '12r'  => ' 09:03:54 PM',
    R      => '21:03',
    '12R'  => '       21:03',
    s      => '1215378234',
    '12s'  => '001215378234',
    S      => '54',
    '12S'  => '000000000054',
    t      => "\t",
    '12t'  => "           \t",
    T      => '21:03:54',
    '12T'  => '    21:03:54',
    u      => '7',
    '12u'  => '000000000007',
    U      => '27',
    '12U'  => '000000000027',
    V      => '27',
    '12V'  => '000000000027',
    w      => '0',
    '12w'  => '000000000000',
    W      => '26',
    '12W'  => '000000000026',
    x      => '07/06/08',
    '12x'  => '    07/06/08',
    X      => '21:03:54',
    '12X'  => '    21:03:54',
    y      => '08',
    '12y'  => '000000000008',
    Y      => '2008',
    '12Y'  => '000000002008',
    z      => '+0000',
    ':z'   => '+00:00',
    '::z'  => '+00:00:00',
    ':::z' => '+00',
    '12z'  => '+00000000000',
    '12:z' => '+00000000:00',
    '12::z' => '+00000:00:00',
    '12:::z' => '+00000000000',
    Z      => qr/^(GMT|UTC)$/,
    '#Z'   => qr/^(gmt|utc)$/,
    '12Z'   => qr/^ {9}(GMT|UTC)$/,
    '%'    => '%',
);

my @t = localtime timelocal(54, 3, 21, 6, 6, 108);

foreach my $f (sort keys %format) {
    if (ref $format{$f} eq 'Regexp') {
        like strftime("%$f", @t), $format{$f}, "%$f";
    }
    else {
        is strftime("%$f", @t), $format{$f}, "%$f";
    };
};
